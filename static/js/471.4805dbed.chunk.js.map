{"version":3,"file":"static/js/471.4805dbed.chunk.js","mappings":"uKAuBA,IArBkB,SAAAA,GAChB,OACE,UAAC,KAAD,gBACEC,QAAQ,QACRC,MAAM,iBACNC,MAAM,UACFH,GAJN,cAMG,mBACD,cACEE,MAAM,UACNE,KAAK,sCACLC,MAAO,CAAEC,YAAa,MAAOJ,MAAO,WAHtC,SAIC,sBAGA,IAAIK,MAAOC,iBAGjB,C,gSCCKC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GACG,oBACPC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,EAAAA,GACA,uBACPI,IAAI,EAAG,qDACPF,SAAS,0BAsGd,EAnGkB,WAEhB,IAAMG,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbR,MAAO,GACPE,SAAU,IAEZJ,iBAAkBA,EAClBW,SAAS,WAAD,wBAAE,WAAMC,GAAN,gGAEeN,GAASO,EAAAA,EAAAA,IAAMD,IAASE,SAFvC,OAEAC,EAFA,QAGNC,EAAAA,EAAAA,GAAY,UAAD,kBAAuBD,EAAOE,KAAKC,OAHxC,iDAKNF,EAAAA,EAAAA,GAAY,QAAD,MALL,yDAAF,mDAAC,KAUX,OACE,UAACG,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACE,SAACC,EAAA,GAAD,KACA,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYb,UAAU,KAAK5B,QAAQ,KAAnC,SAAwC,aAGxC,UAAC+B,EAAA,EAAD,CACEH,UAAU,OACVT,SAAUH,EAAO0B,aACjBC,YAAU,EACVX,GAAI,CAAEY,GAAI,GAJZ,WAME,SAACC,EAAA,EAAD,CACElC,UAAQ,EACRmC,WAAS,EACTC,aAAa,QACbC,GAAG,QACHtB,KAAK,QACLuB,MAAM,gBACNC,MAAOlC,EAAOI,OAAOV,MACrByC,SAAUnC,EAAOoC,aACjBC,OAAQrC,EAAOsC,WACfC,MAAOvC,EAAOwC,QAAQ9C,OAAS+C,QAAQzC,EAAO0C,OAAOhD,OACrDiD,WAAY3C,EAAOwC,QAAQ9C,OAASM,EAAO0C,OAAOhD,MAClDsB,GAAI,CAAE4B,GAAI,MAEZ,SAACf,EAAA,EAAD,CACElC,UAAQ,EACRmC,WAAS,EACTC,aAAa,eACbC,GAAG,WACHtB,KAAK,WACLuB,MAAM,WACNY,KAAK,WACLX,MAAOlC,EAAOI,OAAOR,SACrBuC,SAAUnC,EAAOoC,aACjBC,OAAQrC,EAAOsC,WACfC,MAAOvC,EAAOwC,QAAQ5C,UAAY6C,QAAQzC,EAAO0C,OAAO9C,UACxD+C,WAAY3C,EAAOwC,QAAQ5C,UAAYI,EAAO0C,OAAO9C,YAEvD,SAACkD,EAAA,EAAD,CACEC,SAAS,SAACC,EAAA,EAAD,CAAUd,MAAM,WAAWjD,MAAM,YAC1CgD,MAAM,iBAER,SAACgB,EAAA,EAAD,CACEJ,KAAK,SACLf,WAAS,EACT9C,QAAQ,YACRgC,GAAI,CAAEY,GAAI,EAAGgB,GAAI,GAJnB,SAKC,aAGD,SAACK,EAAA,EAAD,CACEjE,QAAQ,WACRC,MAAM,UACN6C,WAAS,EACTlB,UAAWsC,EAAAA,GACXC,GAAG,gBALL,SAMC,wBAKL,SAACC,EAAA,EAAD,CAAWpC,GAAI,CAAEY,GAAI,OAG1B,EC3HD,EAJkB,WAChB,OAAO,SAACyB,EAAD,GACR,C","sources":["components/Copyright/Copyright.jsx","components/Login/Login.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { Typography } from '@mui/material';\n\nconst Copyright = props => {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright Â© '}\n      <a\n        color=\"inherit\"\n        href=\"https://github.com/Tkachuk-Yaroslav\"\n        style={{ marginRight: '4px', color: 'inherit' }}\n      >\n        Yaroslav Tkachuk\n      </a>\n      {new Date().getFullYear()}\n    </Typography>\n  );\n};\n\nexport default Copyright;\n","import * as React from 'react';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Box,\n  Typography,\n  Container,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport createToast from 'utils/toast';\nimport Copyright from 'components/Copyright/Copyright';\n\n// Validation for login form\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nconst LoginForm = () => {\n  // Create a Redux dispatcher\n  const dispatch = useDispatch();\n  // Initialization Formik\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      try {\n        const result = await dispatch(logIn(values)).unwrap(); //unwrap() will throw the rejected value\n        createToast('success', `Welcome ${result.user.name}`);\n      } catch (error) {\n        createToast('error', error);\n      }\n    },\n  });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={formik.handleSubmit}\n          noValidate\n          sx={{ mt: 1 }}\n        >\n          <TextField\n            required\n            fullWidth\n            autoComplete=\"email\"\n            id=\"email\"\n            name=\"email\"\n            label=\"Email Address\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n            sx={{ mb: 2 }}\n          />\n          <TextField\n            required\n            fullWidth\n            autoComplete=\"new-password\"\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            fullWidth\n            component={Link}\n            to=\"/registration\"\n          >\n            Registration\n          </Button>\n        </Box>\n      </Box>\n      <Copyright sx={{ mt: 5 }} />\n    </Container>\n  );\n};\n\nexport default LoginForm;\n","import Login from 'components/Login/Login';\nimport React from 'react';\n\nconst LoginPage = () => {\n  return <Login />;\n};\n\nexport default LoginPage;\n"],"names":["props","variant","color","align","href","style","marginRight","Date","getFullYear","validationSchema","yup","email","required","password","min","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","logIn","unwrap","result","createToast","user","name","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","handleSubmit","noValidate","mt","TextField","fullWidth","autoComplete","id","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","mb","type","FormControlLabel","control","Checkbox","Button","Link","to","Copyright","Login"],"sourceRoot":""}