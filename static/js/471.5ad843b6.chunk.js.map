{"version":3,"file":"static/js/471.5ad843b6.chunk.js","mappings":"wKAEA,MAqBA,EArBkBA,IAEdC,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CACTC,QAAQ,QACRC,MAAM,iBACNC,MAAM,YACFL,EAAKM,SAAA,CAER,mBACDC,EAAAA,EAAAA,KAAA,KACEH,MAAM,UACNI,KAAK,sCACLC,MAAO,CAAEC,YAAa,MAAON,MAAO,WAAYE,SACjD,sBAGA,IAAIK,MAAOC,gB,4OCIlB,MAAMC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GACG,oBACPC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,EAAAA,GACA,uBACPI,IAAI,EAAG,qDACPF,SAAS,0BAsGd,EAnGkBG,KAEhB,MAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbT,MAAO,GACPE,SAAU,IAEZJ,iBAAkBA,EAClBY,SAAUC,UACR,IACE,MAAMC,QAAeP,GAASQ,EAAAA,EAAAA,IAAMC,IAASC,UAC7CC,EAAAA,EAAAA,GAAY,UAAU,WAADC,OAAaL,EAAOM,KAAKC,MAChD,CAAE,MAAOC,IACPJ,EAAAA,EAAAA,GAAY,QAASI,EACvB,KAIJ,OACElC,EAAAA,EAAAA,MAACmC,EAAAA,EAAS,CAACC,UAAU,OAAOC,SAAS,KAAIhC,SAAA,EACvCC,EAAAA,EAAAA,KAACgC,EAAAA,GAAW,KACZtC,EAAAA,EAAAA,MAACuC,EAAAA,EAAG,CACFC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UACZvC,SAAA,EAEFC,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CAACL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAAmB1C,UAC9CC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,OAEnB1C,EAAAA,EAAAA,KAACL,EAAAA,EAAU,CAACmC,UAAU,KAAKlC,QAAQ,KAAIG,SAAC,aAGxCL,EAAAA,EAAAA,MAACuC,EAAAA,EAAG,CACFH,UAAU,OACVZ,SAAUH,EAAO4B,aACjBC,YAAU,EACVV,GAAI,CAAEW,GAAI,GAAI9C,SAAA,EAEdC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAS,CACRrC,UAAQ,EACRsC,WAAS,EACTC,aAAa,QACbC,GAAG,QACHtB,KAAK,QACLuB,MAAM,gBACNC,MAAOpC,EAAOO,OAAOd,MACrB4C,SAAUrC,EAAOsC,aACjBC,OAAQvC,EAAOwC,WACf3B,MAAOb,EAAOyC,QAAQhD,OAASiD,QAAQ1C,EAAO2C,OAAOlD,OACrDmD,WAAY5C,EAAOyC,QAAQhD,OAASO,EAAO2C,OAAOlD,MAClD0B,GAAI,CAAE0B,GAAI,MAEZ5D,EAAAA,EAAAA,KAAC8C,EAAAA,EAAS,CACRrC,UAAQ,EACRsC,WAAS,EACTC,aAAa,eACbC,GAAG,WACHtB,KAAK,WACLuB,MAAM,WACNW,KAAK,WACLV,MAAOpC,EAAOO,OAAOZ,SACrB0C,SAAUrC,EAAOsC,aACjBC,OAAQvC,EAAOwC,WACf3B,MAAOb,EAAOyC,QAAQ9C,UAAY+C,QAAQ1C,EAAO2C,OAAOhD,UACxDiD,WAAY5C,EAAOyC,QAAQ9C,UAAYK,EAAO2C,OAAOhD,YAEvDV,EAAAA,EAAAA,KAAC8D,EAAAA,EAAgB,CACfC,SAAS/D,EAAAA,EAAAA,KAACgE,EAAAA,EAAQ,CAACb,MAAM,WAAWtD,MAAM,YAC1CqD,MAAM,iBAERlD,EAAAA,EAAAA,KAACiE,EAAAA,EAAM,CACLJ,KAAK,SACLd,WAAS,EACTnD,QAAQ,YACRsC,GAAI,CAAEW,GAAI,EAAGe,GAAI,GAAI7D,SACtB,aAGDC,EAAAA,EAAAA,KAACiE,EAAAA,EAAM,CACLrE,QAAQ,WACRC,MAAM,UACNkD,WAAS,EACTjB,UAAWoC,EAAAA,GACXC,GAAG,gBAAepE,SACnB,wBAKLC,EAAAA,EAAAA,KAACoE,EAAAA,EAAS,CAAClC,GAAI,CAAEW,GAAI,OACX,ECzHhB,EAJkBwB,KACTrE,EAAAA,EAAAA,KAACsE,EAAK,G","sources":["components/Copyright/Copyright.jsx","components/Login/Login.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { Typography } from '@mui/material';\n\nconst Copyright = props => {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright Â© '}\n      <a\n        color=\"inherit\"\n        href=\"https://github.com/Tkachuk-Yaroslav\"\n        style={{ marginRight: '4px', color: 'inherit' }}\n      >\n        Yaroslav Tkachuk\n      </a>\n      {new Date().getFullYear()}\n    </Typography>\n  );\n};\n\nexport default Copyright;\n","import * as React from 'react';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Box,\n  Typography,\n  Container,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport createToast from 'utils/toast';\nimport Copyright from 'components/Copyright/Copyright';\n\n// Validation for login form\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nconst LoginForm = () => {\n  // Create a Redux dispatcher\n  const dispatch = useDispatch();\n  // Initialization Formik\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      try {\n        const result = await dispatch(logIn(values)).unwrap(); //unwrap() will throw the rejected value\n        createToast('success', `Welcome ${result.user.name}`);\n      } catch (error) {\n        createToast('error', error);\n      }\n    },\n  });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={formik.handleSubmit}\n          noValidate\n          sx={{ mt: 1 }}\n        >\n          <TextField\n            required\n            fullWidth\n            autoComplete=\"email\"\n            id=\"email\"\n            name=\"email\"\n            label=\"Email Address\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n            sx={{ mb: 2 }}\n          />\n          <TextField\n            required\n            fullWidth\n            autoComplete=\"new-password\"\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            fullWidth\n            component={Link}\n            to=\"/registration\"\n          >\n            Registration\n          </Button>\n        </Box>\n      </Box>\n      <Copyright sx={{ mt: 5 }} />\n    </Container>\n  );\n};\n\nexport default LoginForm;\n","import Login from 'components/Login/Login';\nimport React from 'react';\n\nconst LoginPage = () => {\n  return <Login />;\n};\n\nexport default LoginPage;\n"],"names":["props","_jsxs","Typography","variant","color","align","children","_jsx","href","style","marginRight","Date","getFullYear","validationSchema","yup","email","required","password","min","LoginForm","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","async","result","logIn","values","unwrap","createToast","concat","user","name","error","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","handleSubmit","noValidate","mt","TextField","fullWidth","autoComplete","id","label","value","onChange","handleChange","onBlur","handleBlur","touched","Boolean","errors","helperText","mb","type","FormControlLabel","control","Checkbox","Button","Link","to","Copyright","LoginPage","Login"],"sourceRoot":""}