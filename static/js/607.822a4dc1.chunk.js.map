{"version":3,"file":"static/js/607.822a4dc1.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","redux/selectors.js","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/PhonebookForm/PhonebookForm.module.css?56c1","components/PhonebookForm/PhonebookForm.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Contact_title__6kEjN\",\"number\":\"Contact_number__aT6T9\",\"delete\":\"Contact_delete__jSeYP\",\"wrapper\":\"Contact_wrapper__K-zLN\"};","export const selectContacts = state => state.contacts.items;\n\nexport const selectContactsArray = state => state.contacts;\n\nexport const selectFilter = state => state.filter;\n","import React from 'react';\nimport css from './Contact.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { selectContactsArray } from 'redux/selectors';\nimport { ColorRing } from 'react-loader-spinner';\n\nexport const Contact = ({ name, number, id }) => {\n  const { isLoading } = useSelector(selectContactsArray);\n\n  const dispatch = useDispatch();\n  return (\n    <div className={css.wrapper}>\n      <div>\n        <h2 className={css.title}>{name}</h2>\n        <h2 className={css.number}>{number}</h2>\n      </div>\n      <button\n        className={css.delete}\n        onClick={() => {\n          dispatch(deleteContact(id));\n        }}\n        type=\"button\"\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <ColorRing\n            visible={true}\n            height=\"30\"\n            width=\"30\"\n            ariaLabel=\"blocks-loading\"\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        ) : (\n          <>Delete &#10060;</>\n        )}\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { Contact } from 'components/Contact/Contact';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\n\nconst ContactList = () => {\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n\n  const filterContact = e => {\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    console.log(filteredContacts);\n    return filteredContacts;\n  };\n\n  return (\n    <ol>\n      {filterContact().map(({ id, name, number }) => {\n        return (\n          <li key={id} className={css.item}>\n            <Contact name={name} number={number} id={id} />\n          </li>\n        );\n      })}\n    </ol>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './Filter.module.css';\n\nimport React from 'react';\nimport { search } from 'redux/filter/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n  return (\n    <div>\n      <label htmlFor=\"filterInput\" className={css.label}>\n        &#128270; Find contacts by name &#128269;\n        <input\n          type=\"text\"\n          className={css.input}\n          id=\"filterInput\"\n          value={filter}\n          onChange={evt => dispatch(search(evt.currentTarget.value))}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"PhonebookForm_form__0btgv\",\"nameLabel\":\"PhonebookForm_nameLabel__8jncC\",\"telLabel\":\"PhonebookForm_telLabel__9HD6Q\",\"input\":\"PhonebookForm_input__oekwR\",\"addBtn\":\"PhonebookForm_addBtn__JuAYi\"};","import { useEffect, useState } from 'react';\nimport css from './PhonebookForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addContact, fetchContacts } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\n\nconst PhonebookForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const nameLabelId = nanoid();\n  const numberLabelId = nanoid();\n\n  const handleChanged = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n    console.log('newContact', newContact);\n\n    const isExistName = contacts.find(el => el.name === name);\n    const isExistNumber = contacts.some(el => el.number === number);\n    console.log('isExistNumber', isExistNumber);\n    if (isExistName || isExistNumber) {\n      // Notify.failure(`${name} is already in contacts`);\n      toast.error(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact(newContact));\n      toast.success(`Contact ${name} successfully created!`);\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form type=\"submit\" className={css.form} onSubmit={handleSubmit}>\n      <label htmlFor={nameLabelId} className={css.nameLabel}>\n        Name\n        <input\n          value={name}\n          onChange={handleChanged}\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          id={nameLabelId}\n        />\n      </label>\n\n      <label htmlFor={numberLabelId} className={css.telLabel}>\n        Number\n        <input\n          value={number}\n          onChange={handleChanged}\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          id={numberLabelId}\n        />\n      </label>\n      <button className={css.addBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default PhonebookForm;\n","import ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport PhonebookForm from 'components/PhonebookForm/PhonebookForm';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectContactsArray } from 'redux/selectors';\n\nconst ContactsPage = () => {\n  const { items, isLoading, error } = useSelector(selectContactsArray);\n\n  return (\n    // <h1>This is Contacts Page</h1>\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        width: '560px',\n        // marginTop: '50px',\n        backgroundColor: '#58c800',\n        borderRadius: '20px',\n        padding: '40px 20px',\n        outline: '3px solid rgb(25 118 210)',\n        outlineOffset: '-20px',\n      }}\n    >\n      <h1>&#128222; Phonebook &#128218;</h1>\n      <PhonebookForm />\n      <h2>&#128104; Contacts &#128105;</h2>\n      <Filter />\n      {isLoading && <p>Loading contacts...</p>}\n      {error && <p>{error}</p>}\n      {items.length > 0 && !error && <ContactList />}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectContactsArray","selectFilter","filter","Contact","name","number","id","isLoading","useSelector","dispatch","useDispatch","className","css","onClick","deleteContact","type","disabled","visible","height","width","ariaLabel","wrapperClass","colors","e","filteredContacts","contact","toLowerCase","includes","console","log","filterContact","map","htmlFor","value","onChange","evt","search","currentTarget","useState","setName","setNumber","useEffect","fetchContacts","nameLabelId","nanoid","numberLabelId","handleChanged","event","reset","onSubmit","preventDefault","newContact","isExistName","find","el","isExistNumber","some","toast","addContact","pattern","title","required","error","style","display","flexDirection","alignItems","marginLeft","marginRight","backgroundColor","borderRadius","padding","outline","outlineOffset","length"],"sourceRoot":""}