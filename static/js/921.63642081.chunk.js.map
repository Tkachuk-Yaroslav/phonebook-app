{"version":3,"file":"static/js/921.63642081.chunk.js","mappings":"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","sources":["components/Copyright/Copyright.jsx","components/Register/Register.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { Typography } from '@mui/material';\n\nconst Copyright = props => {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright Â© '}\n      <a\n        color=\"inherit\"\n        href=\"https://github.com/Tkachuk-Yaroslav\"\n        style={{ marginRight: '4px', color: 'inherit' }}\n      >\n        Yaroslav Tkachuk\n      </a>\n      {new Date().getFullYear()}\n    </Typography>\n  );\n};\n\nexport default Copyright;\n","import * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Grid,\n  Box,\n  Typography,\n  Container,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport createToast from 'utils/toast';\nimport Copyright from 'components/Copyright/Copyright';\n\n// Validation for registration form\nconst validationSchema = yup.object({\n  name: yup\n    .string('Enter your full name')\n    .required('Full name is required')\n    .matches(/^[A-Za-z\\s]+$/, 'Name can only contain (ENG) letters'),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nconst RegisterForm = () => {\n  // Create a Redux dispatcher\n  const dispatch = useDispatch();\n  // Initialization Formik\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      try {\n        const result = await dispatch(register(values)).unwrap(); //unwrap() will throw the rejected value\n        createToast('success', `Welcome ${result.user.name}`);\n      } catch (error) {\n        createToast('error', error);\n      }\n    },\n  });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box\n          component=\"form\"\n          noValidate\n          onSubmit={formik.handleSubmit}\n          sx={{ mt: 3 }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"given-name\"\n                required\n                fullWidth\n                id=\"name\"\n                name=\"name\"\n                label=\"Name\"\n                value={formik.values.name}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={formik.touched.name && Boolean(formik.errors.name)}\n                helperText={formik.touched.name && formik.errors.name}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                autoComplete=\"email\"\n                id=\"email\"\n                name=\"email\"\n                label=\"Email Address\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={formik.touched.email && Boolean(formik.errors.email)}\n                helperText={formik.touched.email && formik.errors.email}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                autoComplete=\"new-password\"\n                id=\"password\"\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                error={\n                  formik.touched.password && Boolean(formik.errors.password)\n                }\n                helperText={formik.touched.password && formik.errors.password}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2, width: '100%' }}\n          >\n            Sign Up\n          </Button>\n        </Box>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          fullWidth\n          component={Link}\n          to=\"/login\"\n        >\n          I already have a profile\n        </Button>\n      </Box>\n      <Copyright sx={{ mt: 5 }} />\n    </Container>\n  );\n};\n\nexport default RegisterForm;\n","import Register from 'components/Register/Register';\nimport React from 'react';\n\nconst RegisterPage = () => {\n  return <Register />;\n};\n\nexport default RegisterPage;\n"],"names":["props","variant","color","align","href","style","marginRight","Date","getFullYear","validationSchema","yup","name","required","matches","email","password","min","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","register","unwrap","result","createToast","user","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","noValidate","handleSubmit","mt","Grid","container","spacing","item","xs","TextField","autoComplete","fullWidth","id","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","autoFocus","type","FormControlLabel","control","Checkbox","Button","mb","width","Link","to","Copyright","Register"],"sourceRoot":""}